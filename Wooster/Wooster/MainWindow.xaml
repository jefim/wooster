<Window x:Class="Wooster.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:utils="clr-namespace:Wooster.Utils"
        Title="Wooster" SizeToContent="Height" Width="500" MinWidth="500"
        WindowStyle="None"
        BorderThickness="0"
        AllowsTransparency="True"
        WindowStartupLocation="Manual"
        Background="Transparent"
        UseLayoutRounding="True"
        Topmost="True">
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding DeactivateCommand}" />
        <KeyBinding Key="Down" Command="{Binding SelectNextActionCommand}" />
        <KeyBinding Key="Up" Command="{Binding SelectPrevActionCommand}" />
    </Window.InputBindings>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <utils:GetDisplayNameConverter x:Key="DisplayNameConverter" />
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="Black"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SettingsButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="18" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="Graphics\cog.png" Width="14" Height="14" />
                </Setter.Value>
            </Setter>
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="Graphics\cog-light.png" Width="14" Height="14" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="Graphics\cog-dark.png" Width="14" Height="14" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ListBoxItem control template-->
        <ControlTemplate TargetType="ListBoxItem" x:Key="ListBoxItemControlTemplate">
            <Grid>
                <Rectangle Fill="{TemplateBinding Background}" x:Name="Background" />
                <Rectangle Fill="#00FFFFFF" x:Name="Overlay" RadiusX="5" RadiusY="5" />
                <ContentPresenter Margin="{TemplateBinding Padding}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter TargetName="Overlay" Property="Fill" Value="{Binding DataContext.Config.Theme.SelectedActionBackgroundColor, FallbackValue=#FAFAFA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
                    <Setter Property="Foreground" Value="{Binding DataContext.Config.Theme.SelectedActionForegroundColor, FallbackValue=#FAFAFA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <!--ListBoxItem style-->
        <Style TargetType="ListBoxItem" x:Key="ListBoxItemStyle">
            <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FontSize" Value="{Binding DataContext.Config.Theme.ActionListFontSize, FallbackValue=22, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
            <Setter Property="Template" Value="{StaticResource ListBoxItemControlTemplate}" />
            <Style.Triggers>
                <Trigger Property="ListBox.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{Binding DataContext.Config.Theme.ActionListAlternateBackgroundColor, FallbackValue=#FAFAFA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <Border BorderBrush="{Binding Config.Theme.BorderColor, FallbackValue=#777777}"
            Background="{Binding Config.Theme.BorderColor, FallbackValue=#777777}"
            Margin="10"
            BorderThickness="5" 
            CornerRadius="7">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" BlurRadius="9" />
        </Border.Effect>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border x:Name="Border">
                <Grid>
                    <TextBox x:Name="TextBox"
                             Template="{StaticResource TextBoxBaseControlTemplate}"
                             BorderThickness="0"
                             FontSize="{Binding Config.Theme.FontSize, FallbackValue=30}"
                             Padding="7"
                             Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}"
                             TextChanged="TextBox_TextChanged_1"
                             Background="{Binding Config.Theme.BackgroundColor, FallbackValue=#EEEEEE}" />
                    <Button Style="{StaticResource SettingsButtonStyle}" />
                </Grid>
            </Border>

            <Grid Visibility="{Binding IsPopupOpen, Converter={StaticResource BoolToVis}}" Grid.Row="1" Margin="0,5,0,0">
                <Border BorderBrush="{Binding Config.Theme.BorderColor, FallbackValue=#777777}"
                        Background="{Binding Config.Theme.BorderColor, FallbackValue=#777777}"
                        BorderThickness="0"
                        CornerRadius="7"
                        MinHeight="30">
                    <ListBox ItemsSource="{Binding AvailableActions}"
                             SelectedItem="{Binding SelectedAction}"
                             BorderThickness="0"
                             AlternationCount="2"
                             Background="{Binding Config.Theme.ActionListBackgroundColor, FallbackValue=#EEEEEE}"
                             Foreground="{Binding Config.Theme.ActionListForegroundColor, FallbackValue=#333333}"
                             x:Name="ListBoxActions"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ItemContainerStyle="{StaticResource ListBoxItemStyle}">
                        <ListBox.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="37" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image Source="{Binding Icon}" MaxWidth="32" Margin="0,0,5,0" x:Name="Image" />
                                    <TextBlock Text="{Binding Converter={StaticResource DisplayNameConverter}}" TextTrimming="CharacterEllipsis" Grid.Column="1" />
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                                        <Setter TargetName="Image" Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect Color="{Binding DataContext.Config.Theme.SelectedActionIconShadowColor, FallbackValue=#FFFFFF, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" BlurRadius="10" ShadowDepth="0" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </Grid>
        </Grid>
    </Border>
</Window>
